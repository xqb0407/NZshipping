/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-11-28 12:29:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class RolesList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <title>角色管理</title>\n");
      out.write("  <meta name=\"renderer\" content=\"webkit\">\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"../../../layuiadmin/layui/css/layui.css\" media=\"all\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"../../../layuiadmin/style/admin.css\" media=\"all\">\r\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"formData\" style=\"display:none;padding-top:20px;\">\r\n");
      out.write("<form class=\"layui-form\" style=\"width: 80%;\" id=\"menuF\">\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<label class=\"layui-form-label\">角色名</label>\r\n");
      out.write("\t\t\t<div class=\"layui-input-block\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"roleName\" class=\"layui-input userName\"\r\n");
      out.write("\t\t\t\t\tlay-verify=\"required\" placeholder=\"请输入角色名\" name=\"roleName\" value=\"\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<label class=\"layui-form-label\">角色描述</label>\r\n");
      out.write("\t\t\t<div class=\"layui-input-block\">\r\n");
      out.write("\t\t\t\t<textarea name=\"roleRemark\" id=\"roleRemark\" value=\"\"  class=\"layui-textarea myself\"></textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!--权限树xtree  -->\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<label class=\"layui-form-label\">修改权限：</label>\r\n");
      out.write("\t\t  \t<div id=\"xtree\" style=\"width:200px;margin-left: 100px\">\r\n");
      out.write("\t\t  \t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("  <div class=\"layui-fluid\">   \n");
      out.write("    <div class=\"layui-card\">\n");
      out.write("      <div class=\"layui-form layui-card-header layuiadmin-card-header-auto\">\n");
      out.write("        <div class=\"layui-form-item\">\n");
      out.write("          <div class=\"layui-inline\">\n");
      out.write("            角色筛选\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-inline\">\n");
      out.write("            <select name=\"rolename\" lay-filter=\"LAY-user-adminrole-type\">\n");
      out.write("              <option value=\"-1\">全部角色</option>\n");
      out.write("              <option value=\"0\">管理员</option>\n");
      out.write("              <option value=\"1\">超级管理员</option>\n");
      out.write("              <option value=\"2\">纠错员</option>\n");
      out.write("              <option value=\"3\">采购员</option>\n");
      out.write("              <option value=\"4\">推销员</option>\n");
      out.write("              <option value=\"5\">运营人员</option>\n");
      out.write("              <option value=\"6\">编辑</option>\n");
      out.write("            </select>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"layui-card-body\">\n");
      out.write("        <div style=\"padding-bottom: 10px;\">\n");
      out.write("          <button class=\"layui-btn layuiadmin-btn-role\" data-type=\"batchdel\">删除</button>\n");
      out.write("          <button class=\"layui-btn layuiadmin-btn-role\" id=\"add\" >添加</button>\n");
      out.write("        </div>\n");
      out.write("      \n");
      out.write("        <table id=\"users\" lay-filter=\"LAY-user-back-role\"></table>  \n");
      out.write("        <script type=\"text/html\" id=\"buttonTpl\">\n");
      out.write("          {{#  if(d.check == true){ }}\n");
      out.write("            <button class=\"layui-btn layui-btn-xs\">已审核</button>\n");
      out.write("          {{#  } else { }}\n");
      out.write("            <button class=\"layui-btn layui-btn-primary layui-btn-xs\">未审核</button>\n");
      out.write("          {{#  } }}\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/html\" id=\"bar\">\n");
      out.write("          <a class=\"layui-btn layui-btn-normal layui-btn-xs\" lay-event=\"edit\"><i class=\"layui-icon layui-icon-edit\"></i>编辑</a>\n");
      out.write("          <a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\"><i class=\"layui-icon layui-icon-delete\"></i>删除</a>\n");
      out.write("        </script>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\r\n");
      out.write("  <script src=\"../layui/js/layui-xtree.js\"></script>\n");
      out.write("<script src=\"../layui/js/jquery.js\"></script>\r\n");
      out.write(" <script src=\"../../../layuiadmin/layui/layui.js\"></script>  \n");
      out.write("  <script>\r\n");
      out.write("\t  \r\n");
      out.write("\t  var table;\r\n");
      out.write("\t  var layer;\r\n");
      out.write("\t  var form;\r\n");
      out.write("\t  var upload;\r\n");
      out.write("\t  var laydate;\r\n");
      out.write("  layui.config({\n");
      out.write("    base: '../../../layuiadmin/' //静态资源所在路径\n");
      out.write("  }).extend({\n");
      out.write("    index: 'lib/index' //主入口模块\n");
      out.write("  }).use(['jquery','index','useradmin', 'table'], function(){\r\n");
      out.write("   table = layui.table;\r\n");
      out.write("   layer = layui.layer;\r\n");
      out.write("   form =layui.form;\r\n");
      out.write("   upload=layui.upload;\r\n");
      out.write("   laydate=layui.laydate\r\n");
      out.write("   \r\n");
      out.write("   var xtree = new layuiXtree({\r\n");
      out.write("         elem: 'xtree'  //(必填) 放置xtree的容器id，不带#号\r\n");
      out.write("         , form: form    //(必填) layui 的 from\r\n");
      out.write("         , data: '/TreetbMenus'  //(必填) 数据接口，需要返回指定结构json字符串\r\n");
      out.write("         , ckall: true   //启动全选功能，默认false\r\n");
      out.write("         , isopen: false\r\n");
      out.write("         , ckallback: function () {}//全选框状态改变后执行的回调函数\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("  //--------------方法渲染TABLE----------------\r\n");
      out.write("  var tableIns = table.render({\r\n");
      out.write("      elem: '#users'\r\n");
      out.write("      , id: 'users'\r\n");
      out.write("      , url: 'roles/rolesList'\r\n");
      out.write("      ,width:1346\r\n");
      out.write("      , cols: [[\r\n");
      out.write("  \t\t  { checkbox: true, LAY_CHECKED: false ,fixed: true } //其它参数在此省略\r\n");
      out.write("          , { field: 'roleId', title: '角色ID', width: 440, align: 'center' }\r\n");
      out.write("          , { field: 'roleName', title: '角色名称',width: 340,  align: 'center'}\r\n");
      out.write("          , { field: 'roleRemark', title: '角色描述', width: 340,align: 'center' }\r\n");
      out.write("          ,{title: '操作', fixed: 'right',  align: 'center', toolbar: '#bar'}\r\n");
      out.write("      ]]\r\n");
      out.write("      , page: true\r\n");
      out.write("      , limits: [5, 10, 15]\r\n");
      out.write("      , limit: 10 //默认采用10\r\n");
      out.write("      , done: function (res, curr, count)\r\n");
      out.write("      {\r\n");
      out.write("          //如果是异步请求数据方式，res即为你接口返回的信息。\r\n");
      out.write("          //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度\r\n");
      out.write("          //console.log(res);\r\n");
      out.write("          //得到当前页码\r\n");
      out.write("          //console.log(curr);\r\n");
      out.write("          $(\"#curPageIndex\").val(curr);\r\n");
      out.write("          //得到数据总量\r\n");
      out.write("          //console.log(count);\r\n");
      out.write("      }\r\n");
      out.write("  });\n");
      out.write("  //工具条事件监听\r\n");
      out.write("  table.on('tool(users)', function (obj)\r\n");
      out.write("  { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter=\"对应的值\"\r\n");
      out.write("      var data = obj.data; //获得当前行数据\r\n");
      out.write("      var layEvent = obj.event; //获得 lay-event 对应的值\r\n");
      out.write("      var tr = obj.tr; //获得当前行 tr 的DOM对象\r\n");
      out.write("      if (layEvent === 'edit')\r\n");
      out.write("      { //编辑\r\n");
      out.write("          layer.open({\r\n");
      out.write("              type: 1,\r\n");
      out.write("              title: '编辑用户信息',\r\n");
      out.write("              shade: 0.4,  //阴影度\r\n");
      out.write("              fix: false,\r\n");
      out.write("              shadeClose: true,\r\n");
      out.write("              maxmin: false,\r\n");
      out.write("              area: ['750px;', '600px;'],    //窗体大小（宽,高）\r\n");
      out.write("              content: $('#formData1'),\r\n");
      out.write("              success: function (layero, index)\r\n");
      out.write("              {\r\n");
      out.write("                  var body = layer.getChildFrame('body', index); //得到子页面层的BODY\r\n");
      out.write("\t\t\t\t\t$(\"#userId\").val(data.id);\r\n");
      out.write("\t\t\t\t\t$(\"#userphone\").val(data.phone);\r\n");
      out.write("\t\t\t\t\t$(\"#userName\").val(data.username);\r\n");
      out.write("\t\t\t\t\t$(\"#useremail\").val(data.email);\r\n");
      out.write("\t\t\t\t\t$(\"#sex\").val(data.sex);\r\n");
      out.write("\t\t\t\t\t$(\"#userImg\").attr(\"src\",data.face);\r\n");
      out.write("                  form.render();\r\n");
      out.write("                  body.find('#hidValue').val(index); //将本层的窗口索引传给子页面层的hidValue中\r\n");
      out.write("              },\r\n");
      out.write("              btn:['修改','取消'],\r\n");
      out.write("              yes: function(index, layero){\r\n");
      out.write("              \t$.post('test/updateTbuser',$('#userForm').serialize(),function(data){\r\n");
      out.write("                      if (data.status ==200 )\r\n");
      out.write("                      {\r\n");
      out.write("                          parent.layer.msg('修改用户信息成功！', { icon: 1, shade: 0.4, time: 1000 });\r\n");
      out.write("                          $(\"#search\").click();\r\n");
      out.write("                          $(\"#handle_status\").val('');\r\n");
      out.write("                      }\r\n");
      out.write("                      else\r\n");
      out.write("                      {\r\n");
      out.write("                          parent.layer.msg('修改用户信息失败！', { icon: 5, shade: 0.4, time: 1000 });\r\n");
      out.write("                      }\r\n");
      out.write("                      layer.close(index);\r\n");
      out.write("                      $(\"#newImg\").html(\"\");\r\n");
      out.write("              \t}); \r\n");
      out.write("              }\r\n");
      out.write("          });\r\n");
      out.write("      }else if(layEvent ==='update'){\r\n");
      out.write("  \t\tlayer.open({\r\n");
      out.write("  \t\t    type: 1,\r\n");
      out.write("  \t\t    title: '修改密码',\r\n");
      out.write("  \t\t    shade: 0.4,  //阴影度\r\n");
      out.write("  \t\t    fix: false,\r\n");
      out.write("  \t\t    shadeClose: true,\r\n");
      out.write("  \t\t    maxmin: false,\r\n");
      out.write("  \t\t    area: ['400px;', '300px;'],    //窗体大小（宽,高）\r\n");
      out.write("  \t\t    content: $('#form1'),\r\n");
      out.write("  \t\t    success: function (layero, index)\r\n");
      out.write("  \t\t    {\r\n");
      out.write("  \t\t        var body = layer.getChildFrame('body', index); //得到子页面层的BODY\r\n");
      out.write("  \t\t\t\t $(\"#UserId1\").val(data.id);\r\n");
      out.write("  \t\t\t\t$(\"#newpassword\").val(data.password);\r\n");
      out.write("  \t\t\t\t\r\n");
      out.write("  \t\t        $(\"#newpassword\").val(data.password);\r\n");
      out.write("  \t\t        form.render();\r\n");
      out.write("  \t\t        body.find('#hidValue').val(index); //将本层的窗口索引传给子页面层的hidValue中\r\n");
      out.write("  \t\t    },\r\n");
      out.write("  \t\t    btn:['修改','取消'],\r\n");
      out.write("  \t\t    yes: function(index, layero){\r\n");
      out.write("  \t\t    \t$.post('user/updateUser',$('#form1').serialize(),function(data){\r\n");
      out.write("  \t\t            if (data.status ==200 )\r\n");
      out.write("  \t\t            {\r\n");
      out.write("  \t\t                parent.layer.msg('修改用户信息成功！', { icon: 1, shade: 0.4, time: 1000 });\r\n");
      out.write("  \t\t                $(\"#search\").click();\r\n");
      out.write("  \t\t                $(\"#handle_status\").val('');\r\n");
      out.write("  \t\t            }\r\n");
      out.write("  \t\t            else\r\n");
      out.write("  \t\t            {\r\n");
      out.write("  \t\t                parent.layer.msg('修改用户信息失败！', { icon: 5, shade: 0.4, time: 1000 });\r\n");
      out.write("  \t\t            }\r\n");
      out.write("  \t\t            layer.close(index);\r\n");
      out.write("  \t\t            $(\"#newImg\").html(\"\");\r\n");
      out.write("  \t\t    \t}); \r\n");
      out.write("  \t\t    }\r\n");
      out.write("  \t\t});\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t}else if(layEvent === 'delete'){\r\n");
      out.write("      \tlayer.confirm('是否删除该用户？', {\r\n");
      out.write("      \t\t  btn: ['确认', '取消'] //可以无限个按钮\r\n");
      out.write("      \t\t  ,btn1: function(index, layero){\r\n");
      out.write("      \t\t\t  $.ajax({\r\n");
      out.write("      \t\t\t\t   type: \"POST\",\r\n");
      out.write("      \t\t\t\t   url: \"user/deleteUser\",\r\n");
      out.write("      \t\t\t\t   data: \"id=\"+data.id,\r\n");
      out.write("      \t\t\t\t   success: function(msg){\r\n");
      out.write("      \t\t\t\t     if(msg.status==200){\r\n");
      out.write("      \t\t\t\t    \t parent.layer.msg('删除成功', { icon: 1, shade: 0.4, time: 1000 });\r\n");
      out.write("      \t\t\t\t     }else{\r\n");
      out.write("      \t\t\t\t    \t parent.layer.msg('删除失败', { icon: 5, shade: 0.4, time: 1000 });\r\n");
      out.write("      \t\t\t\t     }\r\n");
      out.write("      \t\t\t\t   }\r\n");
      out.write("      \t\t\t\t});\r\n");
      out.write("      \t\t\t  $(tr).remove();\r\n");
      out.write("      \t\t\t  layer.close(index);\r\n");
      out.write("      \t\t  }\r\n");
      out.write("      \t\t});\r\n");
      out.write("      }\r\n");
      out.write("  \t\r\n");
      out.write("  });\n");
      out.write("\t$(\"#add\").click(function(){\r\n");
      out.write("\t\tvar index = layui.layer.open({\r\n");
      out.write("\t\t\ttype: 2 //此处以iframe举例\r\n");
      out.write("\t\t\t       ,title: '添加角色'\r\n");
      out.write("\t\t\t       ,area: ['400px', '600px']\r\n");
      out.write("\t\t\t       ,shade: 0\r\n");
      out.write("\t\t\t       ,maxmin: true\r\n");
      out.write("\t\t\t       ,content: 'addRole'\r\n");
      out.write("\t\t\t\t   ,success: function (layero, index)\r\n");
      out.write("\t\t\t\t   {\r\n");
      out.write("\t\t\t\t\t   var body = layer.getChildFrame('body', index); //得到子页面层的BODY\r\n");
      out.write("\t\t\t\t\t   body.find('#hidValue').val(index); //将本层的窗口索引传给子页面层的hidValue中\r\n");
      out.write("\t\t\t\t   }\r\n");
      out.write("\t\t\t       ,zIndex: layer.zIndex //重点1\r\n");
      out.write("\t\t\t       ,success: function(layero){\r\n");
      out.write("\t\t\t         layer.setTop(layero); //重点2\r\n");
      out.write("\t\t\t       }\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("\n");
      out.write("      \n");
      out.write("/*    $('.layui-btn.layuiadmin-btn-role').on('click', function(){\n");
      out.write("      var type = $(this).data('type');\n");
      out.write("      active[type] ? active[type].call(this) : '';\n");
      out.write("    }); */\r\n");
      out.write("\t\r\n");
      out.write("\t\n");
      out.write("  });\n");
      out.write("  </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
