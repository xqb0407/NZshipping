/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-11-28 14:12:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.roles;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addRole_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"utf-8\">\r\n");
      out.write("\t<title>角色编辑</title>\r\n");
      out.write("\t<meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("\t<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("\t<meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"../layuiadmin/layui/css/layui.css\" media=\"all\" />\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t\t.layui-form-item .layui-inline{ width:33.333%; float:left; margin-right:0; }\r\n");
      out.write("\t\t@media(max-width:1240px){\r\n");
      out.write("\t\t\t.layui-form-item .layui-inline{ width:100%; float:none; }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"childrenBody\">\r\n");
      out.write("\t<form class=\"layui-form\" style=\"width:80%; padding-top: 15px;\" id=\"arf\">\r\n");
      out.write("\t\t<!-- 权限提交隐藏域 -->\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"m\"  name=\"m\"/>\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<label class=\"layui-form-label\">角色名</label>\r\n");
      out.write("\t\t\t<div class=\"layui-input-block\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"roleName\" class=\"layui-input userName\" lay-verify=\"required\" placeholder=\"请输入角色名\" name=\"roleName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.roleName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<label class=\"layui-form-label\">角色描述</label>\r\n");
      out.write("\t\t\t<div class=\"layui-input-block\">\r\n");
      out.write("\t\t\t\t<textarea placeholder=\"请输入角色描述\" class=\"layui-textarea linksDesc\" lay-verify=\"required\" name=\"roleRemark\" >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.roleRemark }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!--权限树xtree  -->\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<label class=\"layui-form-label\">分配权限：</label>\r\n");
      out.write("\t      \t<div id=\"xtree\" style=\"width:200px;margin-left: 100px\">\r\n");
      out.write("\t      \t</div>\r\n");
      out.write("      \t</div>\r\n");
      out.write("\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t<div class=\"layui-input-block\">\r\n");
      out.write("\t\t\t\t<button class=\"layui-btn\" lay-submit=\"\" lay-filter=\"editRole\">立即提交</button>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("<script src=\"../layui/js/layui-xtree.js\"></script>\n");
      out.write("<script src=\"../layui/js/jquery.js\"></script>\r\n");
      out.write("<script src=\"../../../layuiadmin/layui/layui.js\"></script>  \r\n");
      out.write("<script>\r\n");
      out.write("var table;\r\n");
      out.write("var layer;\r\n");
      out.write("var form;\r\n");
      out.write("var upload;\r\n");
      out.write("var laydate;\r\n");
      out.write("\tlayui.config({\r\n");
      out.write("\t  base: '../../../layuiadmin/' //静态资源所在路径\r\n");
      out.write("\t}).extend({\r\n");
      out.write("\t  index: 'lib/index' //主入口模块\r\n");
      out.write("\t}).use(['jquery','index','useradmin', 'table'], function(){\r\n");
      out.write("\t table = layui.table;\r\n");
      out.write("\t layer = layui.layer;\r\n");
      out.write("\t form =layui.form;\r\n");
      out.write("\t laydate=layui.laydate\r\n");
      out.write("\t \r\n");
      out.write("\t var xtree = new layuiXtree({\r\n");
      out.write("\t       elem: 'xtree'  //(必填) 放置xtree的容器id，不带#号\r\n");
      out.write("\t       , form: form    //(必填) layui 的 from\r\n");
      out.write("\t       , data: '/TreetbMenus'  //(必填) 数据接口，需要返回指定结构json字符串\r\n");
      out.write("\t       , ckall: true   //启动全选功能，默认false\r\n");
      out.write("\t       , isopen: false\r\n");
      out.write("\t       , ckallback: function () {}//全选框状态改变后执行的回调函数\r\n");
      out.write("\t });\r\n");
      out.write("\t form.on(\"submit(editRole)\",function(data){\r\n");
      out.write("\t \tvar list=xtree.GetChecked()\r\n");
      out.write("\t \t//菜单id\r\n");
      out.write("\t \tvar mStr=\"\";\r\n");
      out.write("\t \tfor(var i=0;i<list.length;i++){\r\n");
      out.write("\t \t\tmStr+=list[i].value+\",\";\r\n");
      out.write("\t \t\tif(xtree.GetParent(list[i].value)!=null){\r\n");
      out.write("\t \t\t\tmStr+=xtree.GetParent(list[i].value).value+\",\";\r\n");
      out.write("\t \t\t\tif(xtree.GetParent(xtree.GetParent(list[i].value).value)!=null){\r\n");
      out.write("\t  \t\t\t\tmStr+=xtree.GetParent(xtree.GetParent(list[i].value).value).value+\",\";\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t \t\t}else{\r\n");
      out.write("\t \t\t\tmStr+=list[i].value+\",\";\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t \t}\r\n");
      out.write("\t \t//去除字符串末尾的‘,’\r\n");
      out.write("\t \tmStr=mStr.substring(0,mStr.length-1)\r\n");
      out.write("\t \tvar m=$(\"#m\");\r\n");
      out.write("\t \t//将权限字符串写进隐藏域\r\n");
      out.write("\t \tm.val(mStr)\r\n");
      out.write("\t \t//弹出loading\r\n");
      out.write("\t \tvar index = top.layer.msg('数据提交中，请稍候',{icon: 16,time:false,shade:0.8});\r\n");
      out.write("\t \tvar msg;\r\n");
      out.write("\t \t$.ajax({\r\n");
      out.write("\t         type: \"POST\",\r\n");
      out.write("\t         url: \"/addRoleList\",\r\n");
      out.write("\t         data:$(\"#arf\").serialize(),\r\n");
      out.write("\t         success:function(data){\r\n");
      out.write("\t \t\t\tif(data.status==200){\r\n");
      out.write("\t \t\t\t\tmsg=\"添加成功\";\r\n");
      out.write("\t \t\t\t}else{\r\n");
      out.write("\t \t\t\t\tmsg=\"添加失败\";\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t     });\r\n");
      out.write("\t \tsetTimeout(function(){\r\n");
      out.write("\t     \ttop.layer.close(index);\r\n");
      out.write("\t     \ttop.layer.msg(msg);\r\n");
      out.write("\t \t\tlayer.closeAll(\"iframe\");\r\n");
      out.write("\t  \t\t//刷新父页面\r\n");
      out.write("\t  \t\tparent.location.reload();\r\n");
      out.write("\t     },1000);\r\n");
      out.write("\t \treturn false;\r\n");
      out.write("\t })\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
