/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2019-11-26 14:03:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menuList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/E:/企业级实训/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/irs/WEB-INF/lib/shiro-all-1.2.3.jar!/META-INF/shiro.tld", Long.valueOf(1393324036000L));
    _jspx_dependants.put("/WEB-INF/lib/shiro-all-1.2.3.jar", Long.valueOf(1533017074000L));
    _jspx_dependants.put("jar:file:/E:/企业级实训/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/irs/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1533017074000L));
    _jspx_dependants.put("/WEB-INF/page/include/taglib.jsp", Long.valueOf(1533017074000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("<title>layout Layui</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/layui/css/layui.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* 数据表格复选框正常显示 */\r\n");
      out.write(".layui-table-cell .layui-form-checkbox[lay-skin=\"primary\"] {\r\n");
      out.write("\ttop: 50%;\r\n");
      out.write("\ttransform: translateY(-50%);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/layui/layui.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar ctx = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"layui-layout-body\" style=\"overflow: auto\">\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<div class=\"layui-btn-group TableTools\" style=\"margin-left: 10px\">\r\n");
      out.write("\t\t");
      if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t<button class=\"layui-btn layui-btn-primary\">（不选中为添加顶级菜单，选中添加子菜单）</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<table class=\"layui-hidden\" id=\"treeTable\" lay-filter=\"treeTable\"></table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tlayui.use(\r\n");
      out.write("\t\t\t\t[ 'element', 'layer', 'form', 'upload', 'treeGrid', 'jquery' ],\r\n");
      out.write("\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\tvar treeGrid = layui.treeGrid, form = layui.form, //很重要\r\n");
      out.write("\t\t\t\t\t$ = layui.jquery, table = layui.table;\r\n");
      out.write("\t\t\t\t\tvar treeTable = treeGrid.render({\r\n");
      out.write("\t\t\t\t\t\tid : 'treeTable',\r\n");
      out.write("\t\t\t\t\t\telem : '#treeTable',\r\n");
      out.write("\t\t\t\t\t\turl : ctx + '/sys/menuData',\r\n");
      out.write("\t\t\t\t\t\tcellMinWidth : 100,\r\n");
      out.write("\t\t\t\t\t\ttreeId : 'menuId'//树形id字段名称\r\n");
      out.write("\t\t\t\t\t\t,\r\n");
      out.write("\t\t\t\t\t\ttreeUpId : 'parentId'//树形父id字段名称\r\n");
      out.write("\t\t\t\t\t\t,\r\n");
      out.write("\t\t\t\t\t\ttreeShowName : 'title'//以树形式显示的字段\r\n");
      out.write("\t\t\t\t\t\t,\r\n");
      out.write("\t\t\t\t\t\tcols : [ [ {\r\n");
      out.write("\t\t\t\t\t\t\tfield : 'menuId',\r\n");
      out.write("\t\t\t\t\t\t\ttitle : ' ',\r\n");
      out.write("\t\t\t\t\t\t\ttemplet : \"#radioTpl\",\r\n");
      out.write("\t\t\t\t\t\t\tunresize : true\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\tfield : 'title',\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '菜单名'\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\tfield : 'icon',\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '图标',\r\n");
      out.write("\t\t\t\t\t\t\ttemplet : '#iconTpl'\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\tfield : 'href',\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '链接'\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\tfield : 'perms',\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '权限标识'\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\tfield : 'sorting',\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '排序',\r\n");
      out.write("\t\t\t\t\t\t\tevent: 'sorting', \r\n");
      out.write("\t\t\t\t\t\t\tstyle:'cursor: pointer;'\r\n");
      out.write("\t\t\t\t\t\t}         \r\n");
      out.write("\t\t\t\t\t\t] ],\r\n");
      out.write("\t\t\t\t\t\tpage : false\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//监听单元格编辑\r\n");
      out.write("\t\t\t\t\ttreeGrid.on('tool(treeTable)', function(obj) {\r\n");
      out.write("\t\t\t\t\t\t var data = obj.data;\r\n");
      out.write("\t\t\t\t\t\t if(obj.event === 'sorting'){\r\n");
      out.write("\t\t\t\t\t\t\t var msg='',flag=false;\r\n");
      out.write("\t\t\t\t\t\t      layer.prompt({\r\n");
      out.write("\t\t\t\t\t\t\t        formType: 2\r\n");
      out.write("\t\t\t\t\t\t\t        ,title: '修改 ID 为 ['+ data.menuId +'] 的排序'\r\n");
      out.write("\t\t\t\t\t\t\t        ,value: data.sorting\r\n");
      out.write("\t\t\t\t\t\t\t      }, function(value, index){\r\n");
      out.write("\t\t\t\t\t\t\t        layer.close(index);\r\n");
      out.write("\t\t\t\t\t\t\t        //这里一般是发送修改的Ajax请求\r\n");
      out.write("\t\t\t\t\t\t\t        if(data.sorting!=value){\r\n");
      out.write("\t\t\t\t\t\t\t        \t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\t                type: \"POST\",\r\n");
      out.write("\t\t\t\t\t\t\t                url: \"updMenuSortingById\",\r\n");
      out.write("\t\t\t\t\t\t\t                async:false,\r\n");
      out.write("\t\t\t\t\t\t\t                data:{'menuId':data.menuId,'sorting':value},\r\n");
      out.write("\t\t\t\t\t\t\t                success:function(d){\r\n");
      out.write("\t\t\t\t\t\t\t                \tif(d.code==0){\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\tmsg=\"修改成功\";\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\tflag=true;\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\tif(d.code==null||d.code==''){\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\t\tmsg=\"权限不足，联系超管！\";\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\t\tmsg=d.msg;\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t\tvalue=data.sorting\r\n");
      out.write("\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t                }\r\n");
      out.write("\t\t\t\t\t\t\t            });\r\n");
      out.write("\t\t\t\t\t\t\t        \tif(flag){\r\n");
      out.write("\t\t\t\t\t\t\t        \t\tlayer.msg(msg,{icon: 1});\r\n");
      out.write("\t\t\t\t\t\t\t        \t}else{\r\n");
      out.write("\t\t\t\t\t\t\t        \t\tlayer.msg(msg,{icon: 5});\r\n");
      out.write("\t\t\t\t\t\t\t        \t}\r\n");
      out.write("\t\t\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t\t\t        //同步更新表格和缓存对应的值\r\n");
      out.write("\t\t\t\t\t\t\t        treeGrid.reload(\"treeTable\",{})\r\n");
      out.write("\t\t\t\t\t\t\t      });\r\n");
      out.write("\t\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#addMenu\").click(function() {\r\n");
      out.write("\t\t\t\t\t\tvar a = $(\"input[name='menuId']:checked\").val();\r\n");
      out.write("\t\t\t\t\t\tif (a == undefined || a != 1) {\r\n");
      out.write("\t\t\t\t\t\t\tif (a == undefined) {\r\n");
      out.write("\t\t\t\t\t\t\t\ta = 0;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t//添加顶级菜单\r\n");
      out.write("\t\t\t\t\t\t\tlayer.open({\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 2,\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : \"添加菜单\",\r\n");
      out.write("\t\t\t\t\t\t\t\tarea : [ '470px', '420px' ],\r\n");
      out.write("\t\t\t\t\t\t\t\tcontent : ctx + \"/sys/toSaveMenu/\" + a, //这里content是一个普通的String\r\n");
      out.write("\t\t\t\t\t\t\t\tend: function () {\r\n");
      out.write("\t\t\t\t\t                location.reload();\r\n");
      out.write("\t\t\t\t\t            }\r\n");
      out.write("\t\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(\"此菜单不允许操作！\", {\r\n");
      out.write("\t\t\t\t\t\t\t\ticon : 5\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#editMenu\").click(function() {\r\n");
      out.write("\t\t\t\t\t\tvar a = $(\"input[name='menuId']:checked\").val();\r\n");
      out.write("\t\t\t\t\t\tif (a == undefined) {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(\"请选择要操作的菜单！\", {\r\n");
      out.write("\t\t\t\t\t\t\t\ticon : 5\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (a == 1) {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(\"不允许操作的菜单！\", {\r\n");
      out.write("\t\t\t\t\t\t\t\ticon : 5\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t//添加顶级菜单\r\n");
      out.write("\t\t\t\t\t\tlayer.open({\r\n");
      out.write("\t\t\t\t\t\t\ttype : 2,\r\n");
      out.write("\t\t\t\t\t\t\ttitle : \"编辑菜单\",\r\n");
      out.write("\t\t\t\t\t\t\tarea : [ '470px', '420px' ],\r\n");
      out.write("\t\t\t\t\t\t\tcontent : ctx + \"/sys/toEditMenu/\" + a //这里content是一个普通的String\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#delMenu\").click(function() {\r\n");
      out.write("\t\t\t\t\t\tvar a = $(\"input[name='menuId']:checked\").val();\r\n");
      out.write("\t\t\t\t\t\tif (a == undefined) {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(\"请选择要操作的菜单！\", {\r\n");
      out.write("\t\t\t\t\t\t\t\ticon : 5\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (a == 1) {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(\"不允许删除！\", {\r\n");
      out.write("\t\t\t\t\t\t\t\ticon : 5\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tlayer.confirm('真的删除行么', function(index) {\r\n");
      out.write("\t\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\t\turl : ctx + '/sys/delMenuById/' + a,\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\t\t\t\t\tsuccess : function(d) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (d.code == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayer.msg(\"删除成功！\", {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ticon : 1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttreeGrid.reload(\"treeTable\",{})\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, 500);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayer.msg(d.msg, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ticon : 5\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\t\tlayer.close(index);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//radio选中监听\r\n");
      out.write("\t\t\t\t\t/* form.on(\"radio(radiodemo)\",function(obj) {\r\n");
      out.write("\t\t\t\t\t    layer.tips(this.value+\" \"+this.name+\":\"+obj.elem.checked,obj.othis);\r\n");
      out.write("\t\t\t\t\t  }); */\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t//监听工具条\r\n");
      out.write("\t\t\t\t\t/* table.on('tool(treeTable)', function(obj){\r\n");
      out.write("\t\t\t\t\t  if(obj.event === 'del'){\r\n");
      out.write("\t\t\t\t\t  \tif(data.roleName=='超级管理员'){\r\n");
      out.write("\t\t\t\t\t  \t\tlayer.msg(\"不允许操作此角色！\",{icon: 5});\r\n");
      out.write("\t\t\t\t\t  \t\treturn;\r\n");
      out.write("\t\t\t\t\t  \t}\r\n");
      out.write("\t\t\t\t\t  \tif(data.id==adminId){\r\n");
      out.write("\t\t\t\t\t  \t\tlayer.msg(\"不允许删除自己！\",{icon: 5});\r\n");
      out.write("\t\t\t\t\t  \t\treturn;\r\n");
      out.write("\t\t\t\t\t  \t}\r\n");
      out.write("\t\t\t\t\t    layer.confirm('真的删除行么', function(index){\r\n");
      out.write("\t\t\t\t\t  \t  $.ajax({\r\n");
      out.write("\t\t\t\t\t  \t\t  url:ctx+'/sys/delAdminById/'+data.id,\r\n");
      out.write("\t\t\t\t\t  \t\t  type : \"get\",\r\n");
      out.write("\t\t\t\t\t  \t\t  success : function(d){\r\n");
      out.write("\t\t\t\t\t  \t\t\t  if(d.code==0){\r\n");
      out.write("\t\t\t\t\t  \t\t\t\t  //obj.del();\r\n");
      out.write("\t\t\t\t\t  \t\t\t\t  table.reload('adminList', {})\r\n");
      out.write("\t\t\t\t\t  \t\t\t  }else{\r\n");
      out.write("\t\t\t\t\t  \t\t\t\t  layer.msg(\"权限不足，联系超管！\",{icon: 5});\r\n");
      out.write("\t\t\t\t\t  \t\t\t  }\r\n");
      out.write("\t\t\t\t\t  \t\t  }\r\n");
      out.write("\t\t\t\t\t  \t  })\r\n");
      out.write("\t\t\t\t\t      layer.close(index);\r\n");
      out.write("\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t  } else if(obj.event === 'edit'){\r\n");
      out.write("\t\t\t\t\t  \tif(data.menuId==1){\r\n");
      out.write("\t\t\t\t\t  \t\tlayer.msg(\"不允许操作此数据！\",{icon: 5});\r\n");
      out.write("\t\t\t\t\t  \t\treturn;\r\n");
      out.write("\t\t\t\t\t  \t}\r\n");
      out.write("\t\t\t\t\t    layer.open({\r\n");
      out.write("\t\t\t\t\t  \t  type: 2,\r\n");
      out.write("\t\t\t\t\t  \t  title:\"编辑角色\",\r\n");
      out.write("\t\t\t\t\t  \t  area: ['380px', '560px'],\r\n");
      out.write("\t\t\t\t\t  \t  content:ctx+\"/sys/toEditMenu/\"+data.menuId //这里content是一个普通的String\r\n");
      out.write("\t\t\t\t\t    })\r\n");
      out.write("\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t}); */\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/html\" id=\"barTools\">\r\n");
      out.write("<a class=\"layui-btn layui-btn-xs\" lay-event=\"edit\">编辑</a>\r\n");
      out.write("<a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\">删除</a>\r\n");
      out.write("</script>\r\n");
      out.write("\t<script type=\"text/html\" id=\"iconTpl\">\r\n");
      out.write(" \t\t {{#  if(d.icon === null){ }}\r\n");
      out.write("   \t\t\t\r\n");
      out.write("\t\t{{#  } else{ }}\r\n");
      out.write("\t\t\t<i class=\"layui-icon\">{{ d.icon }}</i>  \r\n");
      out.write("  \t\t{{#  } }}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script type=\"text/html\" id=\"radioTpl\">\r\n");
      out.write("  <input type=\"radio\" name=\"menuId\" value=\"{{d.menuId}}\" title=\" \" lay-filter=\"radiodemo\">\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/page/include/taglib.jsp(2,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /WEB-INF/page/include/taglib.jsp(2,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/page/include/taglib.jsp(2,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f0_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f0.setParent(null);
      // /WEB-INF/page/admin/menuList.jsp(29,2) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f0.setName("sys:menu:save");
      int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<button class=\"layui-btn\" id=\"addMenu\">添加菜单</button>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      _jspx_th_shiro_005fhasPermission_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f0, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f1_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f1.setParent(null);
      // /WEB-INF/page/admin/menuList.jsp(32,2) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f1.setName("sys:menu:update");
      int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<button class=\"layui-btn\" id=\"editMenu\">编辑菜单</button>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      _jspx_th_shiro_005fhasPermission_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f1, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f2_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
      // /WEB-INF/page/admin/menuList.jsp(35,2) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f2.setName("sys:menu:delete");
      int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<button class=\"layui-btn layui-btn-danger\" id=\"delMenu\">删除菜单</button>\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      _jspx_th_shiro_005fhasPermission_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f2, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f2_reused);
    }
    return false;
  }
}
